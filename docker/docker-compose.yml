version: '3'

x-airflow-common: &airflow-common
  build:
    context: ..
    dockerfile: docker/Dockerfile
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    POSTGRES_USER: airflow
    POSTGRES_PASSWORD: airflow
    POSTGRES_DB: airflow
  volumes:
    - ../dags:/opt/airflow/dags
    - ../scripts:/opt/airflow/scripts
    - ../data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    container_name: MLops-HW1-postgres
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: MLops-HW1-airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname admin \
          --lastname admin \
          --role Admin \
          --email admin@example.com \
          --password admin &&
        airflow connections add 'postgres_conn' \
          --conn-type 'postgres' \
          --conn-host 'postgres' \
          --conn-schema 'airflow' \
          --conn-login 'airflow' \
          --conn-password 'airflow' \
          --conn-port '5432'

  airflow-webserver:
    <<: *airflow-common
    container_name: MLops-HW1-airflow-webserver
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: MLops-HW1-airflow-scheduler
    command: scheduler
    restart: always

volumes:
  postgres_data: 